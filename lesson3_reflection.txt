When would you want to use a remote repository rather than keeping all your work
local?

    The main thing would be that is allows other people to collaborate asynchronously. Also, you always have an off-site backup in case anything happens.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Because you have control over when exactly the repo is updated. Maybe you were working on something locally and someone else was pushing some changes to the remote repository. Updating automatically would result in unwanted changes to your local version. 

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    A fork respresents a "remote" clone of a repository. The cloning takes place on GitHub's servers and the repo is then present on your account. I would use forks for collaborating on a project.
    Clones are local copies of a repository. They are needed whenever you need to make changes to a repository and editing those files is impractical or impossible to do directly on GitHub.
    Branches represent sets of commits made after a specific commit in the repository and allow these changes not to affect other branches. They can then be integrated into the main code-base (i.e. merged into the *master* branch). They are useful for experimental features or just for developing a certain part of a project without affecting the entire code-base.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Fill in your answer here

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
