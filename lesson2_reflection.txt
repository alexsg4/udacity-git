What happens when you initialize a repository? Why do you need to do it?

A .git directory is created inside the current directory storing the metadata. No files are tracked and no commit is created yet.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

The staging area is not part of the repository but of Git itself. It allows us to make temporary changes and experiment with multiple files before committing. (i.e. making permanent changes to the working directory)

How can you use the staging area to make sure you have one commit per logical
change?

By seeing which files are in the staging area and using diff for those files you're able to deduce whether or not the files in question store more than one logical change. I guess...

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

When adding experimental features or when creating a new version of the project but you also want to keep the legacy code for various reasons.

How do the diagrams help you visualize the branch structure?

//TODO

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

//TODO

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

//TODO
